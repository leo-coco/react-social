// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id    Int     @default(autoincrement()) @id
  email String  @unique
  firstName String
  lastName String
  posts   Post[]
  comments  Comment[]
  likes     Like[]
}

model Post {
  id        Int     @default(autoincrement()) @id
  title     String @db.VarChar(255)
  content   String
  user      User   @relation(fields: [userId], references: [id])
  userId    Int
  comments  Comment[]
  likes     Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
  
  model Comment {
    id        Int     @default(autoincrement()) @id
    content   String
    post      Post @relation(fields: [postId], references: [id])
    postId   Int
    user      User   @relation(fields: [userId], references: [id])
    userId    Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
  }

  model Like {
    id  Int     @default(autoincrement()) @id
    user  User  @relation(fields: [userId], references: [id])
    userId  Int
    post  Post @relation(fields: [postId], references: [id])
    postId Int

    // Ensure a user can only like a post once
    @@unique([userId, postId])
  }